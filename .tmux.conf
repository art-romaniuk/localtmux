# Set prefix to space.
unbind-key C-b
set-option -g prefix C-Space

# Bindings:
# - to see current bindings:
#   tmux list-keys

# - #S = session name
# - #T = pane title (~/.zshrc sets this to the last/current command)
set-option -g set-titles-string "#S > #T"

# Catching terminal window focus inside plain vim
set -g focus-events on

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle between current and last-used window (normally prefix-l).
bind ^space last-window

# `^space ^space` is awfully close to the destructive `^space space`, which
# trashes the layout. Providea quick way to get back to the previus-used
# layout.
#
# Normally used for previous-window, but I never use that, prefering numeric
# access.
bind p select-layout -o

# Intuitive window-splitting keys.
bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Status bar.
set -g status-style 'bg=#373b41,fg=white,bold,italics'
set -g status-left-length 40
set -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
set -g status-right "#[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p"
set -g status-interval 60 # Default is 15.

# Pane border color
set-option -g pane-border-style fg=colour03 #fg=base02
set-option -g pane-active-border-style fg=colour238 #fg=base01

# clock
# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Highlight active window.
set-option -w -g window-status-current-style bg=red

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

set -g history-limit 50000

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-Space.
set -s escape-time 0

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# But don't change tmux's own window titles.
set -w -g automatic-rename off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1

# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward " "

bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Rename window pane
set-option -g status-interval 0
set-option -g automatic-rename on
set-option -g automatic-rename-format '#(basename "#{pane_current_path}")'

# Analagous with naked C-l which resets/clears the terminal.
unbind C
bind-key C-l clear-history

source-file -q ~/.tmux-local.conf

# List of plugins
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'schasse/tmux-jump'

# Jeader key for jump
set -g @jump-key 'J'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.dotfiles/.tmux/plugins/tpm/tpm'
set -ga terminal-overrides ",xterm-256color:Tc"

# Events from vim
set -g focus-events on
# set -g status-bg default
set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge)'
set -g status-right-length 120
set -g status-interval 0

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set-option -g mouse on

# Visual selection for copy-past
setw -g mode-keys vi
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
